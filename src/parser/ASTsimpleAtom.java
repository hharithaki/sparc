/* Generated By:JJTree: Do not edit this line. ASTsimpleAtom.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package parser;

import java.util.HashMap;

public
class ASTsimpleAtom extends SimpleNode {
  public ASTsimpleAtom(int id) {
    super(id);
  }

  public ASTsimpleAtom(SparcTranslator p, int id) {
    super(p, id);
  }


  /** Accept the visitor. **/
  public Object jjtAccept(SparcTranslatorVisitor visitor, Object data) {
    return visitor.visit(this, data);
  }
  
  
  // disallow toString() call without sort renaming map
  @Override
  public String toString() {
	  throw new UnsupportedOperationException();
  }
  
  
  public String toString(HashMap<String, String> sortRenaming) {
	  if(this.jjtGetNumChildren()>0 && 
			  (((SimpleNode)(this.jjtGetChild(0))).getId()
					  ==SparcTranslatorTreeConstants.JJTEXTENDEDNONRELATOM)) {
		  return ((ASTextendedNonRelAtom)(this.jjtGetChild(0))).toString(sortRenaming);
	  }
	  else {
		  SimpleNode child1=(SimpleNode)this.jjtGetChild(0);
		  SimpleNode child2=(SimpleNode)this.jjtGetChild(1);
		  return child1.toString()+this.image+child2.toString();
	  }
  }
}
/* JavaCC - OriginalChecksum=9cbfe0f95b70d3aa3d2826468bfaf789 (do not edit this line) */
