/* Generated By:JJTree: Do not edit this line. ASTprogramRule.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package parser;

import java.util.HashMap;

public
class ASTprogramRule extends SimpleNode {
  
  private String label="";
  public ASTprogramRule(int id) {
    super(id);
  }

  public ASTprogramRule(SparcTranslator p, int id) {
    super(p, id);
  }


  /** Accept the visitor. **/
  public Object jjtAccept(SparcTranslatorVisitor visitor, Object data) {
    return visitor.visit(this, data);
  }
  
  public void setLabel(String label) {
	  this.label=label;
  }
  
  public String getLabel() {
	  return label;
  }
  
  public String toString(HashMap<String,String> sortRenaming) {
	  SimpleNode child = (SimpleNode)this.jjtGetChild(0);
	  if(child.getId() == SparcTranslatorTreeConstants.JJTUNLABELEDPROGRAMCRRULE) 
		  return ((ASTunlabeledProgramCrRule)child).toString(sortRenaming);
      else return ((ASTunlabeledProgramRule)child).toString(sortRenaming);
		  
	  
  }
}
/* JavaCC - OriginalChecksum=428d6951609a1e0a43bb04d6a9135108 (do not edit this line) */
