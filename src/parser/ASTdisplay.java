/* Generated By:JJTree: Do not edit this line. ASTdisplay.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package parser;

import java.util.HashSet;
import java.util.Set;

public
class ASTdisplay extends SimpleNode {
	
  public ASTdisplay(int id) {
    super(id);
  }

  public ASTdisplay(SparcTranslator p, int id) {
    super(p, id);
  }
  
  
  /**
   * Create display section consisting of all predicate names in ps
   * @param ps
   */
  public ASTdisplay(Set<String> ps) {
	  super(SparcTranslatorTreeConstants.JJTDISPLAY);
	  
	  int idx = 0; 
	  for(String p: ps) {
		 ASTnonRelAtom neg = new ASTnonRelAtom(p);
		 ASTpredSymbol child = (ASTpredSymbol) neg.jjtGetChild(0);
		 child.negative = true;
		 ASTnonRelAtom pos = new ASTnonRelAtom(p);
		 this.jjtAddChild(pos, idx++);
		 this.jjtAddChild(neg, idx++);
	  }  
  }

}
/* JavaCC - OriginalChecksum=86ef460547e2fe8957abfaf9047ca4f7 (do not edit this line) */
