/* Generated By:JJTree: Do not edit this line. QASTsymbolicTerm.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=QAST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package querying.parsing.query;


public
class QASTsymbolicTerm extends SimpleNode {
  public QASTsymbolicTerm(int id) {
    super(id);
  }

  public QASTsymbolicTerm(QueryParser p, int id) {
    super(p, id);
  }
  
  @Override
  public String toString()
  {
	  if( ((SimpleNode)(this.jjtGetChild(0))).id
				 ==QueryParserTreeConstants.JJTSYMBOLICCONSTANT) {
			 return   ((SimpleNode) (this.jjtGetChild(0))).toString();
		 } else {
			 String result="";
			 for(int i=0;i<this.jjtGetNumChildren();i++) {
				 result += ((SimpleNode)(this.jjtGetChild(i))).toString();
			 }
			 result+=")";
			
			 return result;
		 }
  }

}
/* JavaCC - OriginalChecksum=0855d233a907a640a70bbfb18952b087 (do not edit this line) */
