/* Generated By:JJTree: Do not edit this line. QASTarithmeticTerm.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=QAST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package querying.parsing.query;



public
class QASTarithmeticTerm extends SimpleNode {
  public QASTarithmeticTerm(int id) {
    super(id);
  }

  public QASTarithmeticTerm(QueryParser p, int id) {
    super(p, id);
  }
  
	public QASTarithmeticTerm(int jjtarithmeticterm, long value) {
	  super(jjtarithmeticterm);
	  QASTatomicArithmeticTerm atomicTerm=new QASTatomicArithmeticTerm(QueryParserTreeConstants.JJTATOMICARITHMETICTERM);
	  atomicTerm.image=Long.toString(value);
	  QASTmultiplicativeArithmeticTerm multTerm=new QASTmultiplicativeArithmeticTerm(QueryParserTreeConstants.JJTMULTIPLICATIVEARITHMETICTERM);
	  QASTadditiveArithmeticTerm addTerm=new QASTadditiveArithmeticTerm(QueryParserTreeConstants.JJTADDITIVEARITHMETICTERM);
	  addTerm.image="+";
	  multTerm.jjtAddChild(atomicTerm, 0);
	  multTerm.image="*";
	  addTerm.jjtAddChild(multTerm, 0);
	  this.jjtAddChild(addTerm, 0);
	}


	public String toString() {
		if(this.jjtGetNumChildren()==0) {
			return this.image;
		}
		return ((SimpleNode) (this.jjtGetChild(0))).toString();
	}

}
/* JavaCC - OriginalChecksum=3da62326f83cd044ace8f64d58801185 (do not edit this line) */
